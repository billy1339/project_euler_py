import pdb

class ProjectEuler: 

	# Problem 1: If we list all the natural numbers below 10 that are multiples
	# of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
	# Find the sum of all the multiples of 3 or 5 below 1000.
	def problem_1(self, counter):
		value = 0
		for i in range(3, counter): # add one to counter to allow user to input the inclusive end number 
			if i % 3 == 0 or i % 5 == 0:
				value += i
		return value		


	# Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
	# By starting with 1 and 2, the first 10 terms will be:

	# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	# By considering the terms in the Fibonacci sequence whose values do not exceed four
	# million, find the sum of the even-valued terms.
	def problem_2(self, limit):
		fib_sum = 2 # account 2, start loop at 3
		prev_1 = 1
		prev_2 = 2
		i = 0
		while i < limit:
			i = prev_1 + prev_2
			if (i % 2 == 0 and i < limit):
				fib_sum += i
			prev_1 = prev_2
			prev_2 = i
		return fib_sum

x = ProjectEuler()
print x.problem_2(4000000) 